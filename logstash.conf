input {
  file {
    path => "/var/log/testlog/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    match => { "message" => "%{LOGLEVEL:loglevel} %{TIMESTAMP_ISO8601:timestamp} \[requestId=.*?\] \[sleuth=.*?\] \[thread=%{DATA:thread}\] %{GREEDYDATA:log_message}" }
  }


  # Grok pattern for GC log messages
  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:gc_timestamp}: %{GREEDYDATA:gc_message}"
    }
    # Add a tag if matched
    add_tag => [ "gc_log" ]
  }

  # Add hostname from Logstash metadata
  mutate {
    add_field => { "hostname" => "%{[host][name]}" }
  }

  # Add servicename based on the log file path
  mutate {
    add_field => { "servicename" => "%{[log][file][path]}" }
  }

  # Extract the filename without the path and extension
  ruby {
    code => '
      path = event.get("servicename")
      if path
        filename = File.basename(path, ".log")
        event.set("servicename", filename)
      end
    '
  }

  if ![loglevel] {
    mutate { add_field => { "loglevel" => "OOPS" } }
  }

  # Remove unnecessary fields
  mutate {
    remove_field => ["tags", "event.original", "@version", "log", "event", "host"]
  }
}

output {
  elasticsearch {
    index => "logstash-%{+YYYY.MM.dd}"
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => "certs/ca/ca.crt"
  }

  stdout { codec => rubydebug }
}
